<?php

/**
 * @file
 * Contains layout functionality for Lightning.
 */

use Drupal\lightning_layout\Plugin\Field\FieldWidget\PanelizerWidget as LightningPanelizerWidget;
use Drupal\node\NodeTypeInterface;
use Drupal\panelizer\Plugin\Field\FieldWidget\PanelizerWidget as BasePanelizerWidget;
use Drupal\user\Entity\Role;

/**
 * Implements hook_field_widget_info_alter().
 */
function lightning_layout_field_widget_info_alter(array &$info) {
  if ($info['panelizer']['class'] == BasePanelizerWidget::class) {
    $info['panelizer']['class'] = LightningPanelizerWidget::class;
  }
}

/**
 * Implements hook_menu_local_actions_alter().
 */
function lightning_layout_menu_local_actions_alter(array &$local_actions) {
  foreach ($local_actions as $id => $action) {
    if ($action['id'] == 'panelizer.default.add') {
      unset($local_actions[$id]);
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function lightning_layout_node_type_insert(NodeTypeInterface $node_type) {
  user_role_grant_permissions('layout_manager', [
    'administer panelizer node ' . $node_type->id() . ' defaults',
  ]);
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function lightning_layout_node_type_delete(NodeTypeInterface $node_type) {
  /** @var \Drupal\user\RoleInterface $role */
  $role = Role::load('layout_manager');
  if ($role) {
    user_role_revoke_permissions($role->id(), [
      'administer panelizer node ' . $node_type->id() . ' defaults',
    ]);
  }
}
